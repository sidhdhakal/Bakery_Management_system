# deploy.yml
name: Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types:
      - completed

jobs:
  update-deployments:
    runs-on: ubuntu-latest
    
    # BEST PRACTICE: Only run this job if the triggering workflow was successful.
    # This prevents deploying a failed or cancelled build.
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    # BEST PRACTICE: Grant permissions for the GITHUB_TOKEN to push to the repo.
    # This is more secure than using a personal access token (PAT).
    permissions:
      contents: write

    steps:
    - name: Checkout Code
      # It's good practice to use the latest major version of actions
      uses: actions/checkout@v4

    - name: Download image tag artifact
      uses: actions/download-artifact@v4
      with:
        name: image-tag
        # THE FIX: Specify the ID of the run that created the artifact.
        # This tells the action to download from the completed "Build" workflow run.
        run-id: ${{ github.event.workflow_run.id }}
        path: . # download to the current directory

    - name: Load image tag from file
      run: echo "IMAGE_TAG=$(cat image_tag.txt)" >> $GITHUB_ENV

    - name: Update Kubernetes Deployment YAMLs
      run: |
        sed -i "s|image: .*/bakery-frontend:.*|image: siddhartha54/bakery-frontend:${{ env.IMAGE_TAG }}|" kubernetes/frontend/deployment.yml
        sed -i "s|image: .*/bakery-backend:.*|image: siddhartha54/bakery-backend:${{ env.IMAGE_TAG }}|" kubernetes/backend/deployment.yml

    - name: Commit and Push Updated YAMLs
      run: |
        # Configure git with the official GitHub Actions bot user
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        git add kubernetes/frontend/deployment.yml kubernetes/backend/deployment.yml
        
        # Check if there are changes to commit to avoid an error if the image tag is the same
        if ! git diff-index --quiet HEAD; then
          git commit -m "Update image tags to ${{ env.IMAGE_TAG }}"
          # The GITHUB_TOKEN is automatically available when permissions are set
          git push
        else
          echo "No changes to deployment files."
        fi
